<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ht.emos.mapper.TbUserDao">

    <resultMap id="BaseResultMap" type="com.ht.emos.proj.TbUser">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="openId" column="open_id" jdbcType="VARCHAR"/>
            <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
            <result property="photo" column="photo" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="sex" column="sex" jdbcType="OTHER"/>
            <result property="tel" column="tel" jdbcType="CHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="hiredate" column="hiredate" jdbcType="DATE"/>
            <result property="role" column="role" jdbcType="OTHER"/>
            <result property="root" column="root" jdbcType="TINYINT"/>
            <result property="deptId" column="dept_id" jdbcType="OTHER"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="salt" column="salt" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,password,
        open_id,nickname,photo,
        name,sex,tel,
        email,hiredate,role,
        root,dept_id,status,
        create_time,salt
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tb_user
        where  id = #{id,jdbcType=INTEGER} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from tb_user
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ht.emos.proj.TbUser" useGeneratedKeys="true">
        insert into tb_user
        ( id,username,password
        ,open_id,nickname,photo
        ,name,sex,tel
        ,email,hiredate,role
        ,root,dept_id,status
        ,create_time,salt)
        values (#{id,jdbcType=INTEGER},#{username,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR}
        ,#{openId,jdbcType=VARCHAR},#{nickname,jdbcType=VARCHAR},#{photo,jdbcType=VARCHAR}
        ,#{name,jdbcType=VARCHAR},#{sex,jdbcType=OTHER},#{tel,jdbcType=CHAR}
        ,#{email,jdbcType=VARCHAR},#{hiredate,jdbcType=DATE},#{role,jdbcType=OTHER}
        ,#{root,jdbcType=TINYINT},#{deptId,jdbcType=OTHER},#{status,jdbcType=TINYINT}
        ,#{createTime,jdbcType=TIMESTAMP},#{salt,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ht.emos.proj.TbUser" useGeneratedKeys="true">
        insert into tb_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="username != null">username,</if>
                <if test="password != null">password,</if>
                <if test="openId != null">open_id,</if>
                <if test="nickname != null">nickname,</if>
                <if test="photo != null">photo,</if>
                <if test="name != null">name,</if>
                <if test="sex != null">sex,</if>
                <if test="tel != null">tel,</if>
                <if test="email != null">email,</if>
                <if test="hiredate != null">hiredate,</if>
                <if test="role != null">role,</if>
                <if test="root != null">root,</if>
                <if test="deptId != null">dept_id,</if>
                <if test="status != null">status,</if>
                <if test="createTime != null">create_time,</if>
                <if test="salt != null">salt,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="username != null">#{username,jdbcType=VARCHAR},</if>
                <if test="password != null">#{password,jdbcType=VARCHAR},</if>
                <if test="openId != null">#{openId,jdbcType=VARCHAR},</if>
                <if test="nickname != null">#{nickname,jdbcType=VARCHAR},</if>
                <if test="photo != null">#{photo,jdbcType=VARCHAR},</if>
                <if test="name != null">#{name,jdbcType=VARCHAR},</if>
                <if test="sex != null">#{sex,jdbcType=OTHER},</if>
                <if test="tel != null">#{tel,jdbcType=CHAR},</if>
                <if test="email != null">#{email,jdbcType=VARCHAR},</if>
                <if test="hiredate != null">#{hiredate,jdbcType=DATE},</if>
                <if test="role != null">#{role,jdbcType=OTHER},</if>
                <if test="root != null">#{root,jdbcType=TINYINT},</if>
                <if test="deptId != null">#{deptId,jdbcType=OTHER},</if>
                <if test="status != null">#{status,jdbcType=TINYINT},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="salt != null">#{salt,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ht.emos.proj.TbUser">
        update tb_user
        <set>
                <if test="username != null">
                    username = #{username,jdbcType=VARCHAR},
                </if>
                <if test="password != null">
                    password = #{password,jdbcType=VARCHAR},
                </if>
                <if test="openId != null">
                    open_id = #{openId,jdbcType=VARCHAR},
                </if>
                <if test="nickname != null">
                    nickname = #{nickname,jdbcType=VARCHAR},
                </if>
                <if test="photo != null">
                    photo = #{photo,jdbcType=VARCHAR},
                </if>
                <if test="name != null">
                    name = #{name,jdbcType=VARCHAR},
                </if>
                <if test="sex != null">
                    sex = #{sex,jdbcType=OTHER},
                </if>
                <if test="tel != null">
                    tel = #{tel,jdbcType=CHAR},
                </if>
                <if test="email != null">
                    email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="hiredate != null">
                    hiredate = #{hiredate,jdbcType=DATE},
                </if>
                <if test="role != null">
                    role = #{role,jdbcType=OTHER},
                </if>
                <if test="root != null">
                    root = #{root,jdbcType=TINYINT},
                </if>
                <if test="deptId != null">
                    dept_id = #{deptId,jdbcType=OTHER},
                </if>
                <if test="status != null">
                    status = #{status,jdbcType=TINYINT},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ht.emos.proj.TbUser">
        update tb_user
        set 
            username =  #{username,jdbcType=VARCHAR},
            password =  #{password,jdbcType=VARCHAR},
            open_id =  #{openId,jdbcType=VARCHAR},
            nickname =  #{nickname,jdbcType=VARCHAR},
            photo =  #{photo,jdbcType=VARCHAR},
            name =  #{name,jdbcType=VARCHAR},
            sex =  #{sex,jdbcType=OTHER},
            tel =  #{tel,jdbcType=CHAR},
            email =  #{email,jdbcType=VARCHAR},
            hiredate =  #{hiredate,jdbcType=DATE},
            role =  #{role,jdbcType=OTHER},
            root =  #{root,jdbcType=TINYINT},
            dept_id =  #{deptId,jdbcType=OTHER},
            status =  #{status,jdbcType=TINYINT},
            create_time =  #{createTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=INTEGER} 
    </update>

    <update id="updatePassword">
        update tb_user
        set salt = #{salt} , password = #{md5Password}
        where id = #{userId}
    </update>

    <select id="searchUserPermissions" parameterType="int" resultType="String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
                 JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>
    <select id="searchIdByOpenId" parameterType="String" resultType="Integer">
        SELECT id FROM tb_user WHERE open_id=#{openId} AND status = 1
    </select>
    <select id="searchUserSummary" parameterType="int" resultType="HashMap">
        SELECT u.name, u.photo, d.dept_name AS deptName
        FROM tb_user u LEFT JOIN tb_dept d ON u.dept_id=d.id
        WHERE u.id=#{userId} AND u.status=1
    </select>
    <select id="searchUserInfo" parameterType="int" resultType="HashMap">
        SELECT
            u.open_id AS openId,
            u.nickname,
            u.name,
            u.photo,
            u.sex,
            u.tel,
            u.email,
            d.dept_name AS dept,
            u.hiredate,
            u.status,
            ( SELECT GROUP_CONCAT( role_name separator "ï¼Œ" ) FROM tb_role WHERE JSON_CONTAINS ( u.role, CONVERT ( id, CHAR ) ) ) AS roles
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId} AND u.status = 1
    </select>
    <select id="searchDeptManagerId" parameterType="int" resultType="Integer">
        SELECT u2.id
        FROM tb_user u1 JOIN tb_user u2 ON u1.dept_id=u2.dept_id
                        JOIN tb_role r ON JSON_CONTAINS(u2.role, CAST(r.id AS CHAR))
        WHERE u1.id=#{id} AND r.id=2 AND u1.status = 1 AND u2.status = 1
        ORDER BY u2.create_time DESC
            LIMIT 1
    </select>
    <select id="searchGmId" resultType="Integer">
        SELECT u.id
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
        WHERE r.id=1 AND u.status = 1
        ORDER BY u.create_time DESC
            LIMIT 1
    </select>
    <select id="searchById" parameterType="int" resultType="HashMap">
        SELECT
            id, username, name, sex, tel, email, hiredate, role, dept_id AS deptId, status,
            CAST(AES_DECRYPT(UNHEX(password),username) AS CHAR) AS password
        FROM tb_user
        WHERE id=#{userId}
    </select>
    <select id="searchAllUser" resultType="HashMap">
        SELECT id,`name`
        FROM tb_user
        WHERE status = 1
    </select>
    <select id="searchByUsername" resultType="com.ht.emos.proj.TbUser" parameterType="String">
        select *
        from tb_user
        where username = #{username}
        limit 1
    </select>
    <select id="checkPassword" resultType="com.ht.emos.proj.TbUser">
        select *
        from tb_user
        where username = #{username} and password = #{password}
        limit 1
    </select>
    <select id="queryUserInfo"  parameterType="Integer" resultType="java.util.HashMap">
        select user.id,user.name ,user.photo,dept.dept_name as deptName
        from tb_user user
        left join tb_dept dept on user.dept_id =  dept.id
        where user.id = #{userId} and user.status = 1
        limit 1
    </select>
    <select id="queryUserByPage" resultType="java.util.HashMap">
        select user.name      as name,
               user.sex,
               user.tel,
               user.email,
               user.hiredate,
               (select GROUP_CONCAT(role.role_name)
                from tb_role as role
        where JSON_CONTAINS(user.role, CONVERT(role.id, CHAR))
            )              as roleName,
            dept.dept_name as deptName,
            user.status    as status
        from tb_user as user
        where 1=1
        <if test="name != null">
            and user.name like "%${name}%"
        </if>

        <if test="sex != null">
            and user.sex = #{sex}
        </if>
        <if test="role != null">
            and user.role = #{role}
        </if>
        <if test="deptId != null">
            and user.dept_id = #{deptId}
        </if>
        <if test="status != null">
            and user.status = #{status}
        </if>
    </select>


    <select id="queryPageCount" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        select count(distinct user.id) from tb_user user
        left join  tb_role role on JSON_CONTAINS(user.role, CONVERT(role.id, CHAR))
        where 1=1
        <if test="name != null">
            and user.name like "%${name}%"
        </if>

        <if test="sex != null">
            and user.sex = #{sex}
        </if>
        <if test="role != null">
            and user.role = #{role}
        </if>
        <if test="deptId != null">
            and user.dept_id = #{deptId}
        </if>
        <if test="status != null">
            and user.status = #{status}
        </if>
        limit #{start},#{length}
    </select>

</mapper>
